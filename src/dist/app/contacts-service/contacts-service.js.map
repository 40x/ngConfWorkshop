{"version":3,"file":"contacts-service.js","sourceRoot":"","sources":["contacts-service.ts"],"names":["ContactsService","ContactsService.constructor","ContactsService.getContacts","ContactsService.getContactById","ContactsService.updateContact","ContactsService.generateRequest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;YAOA;gBAIEA,yBAAoBA,KAAWA;oBAAXC,UAAKA,GAALA,KAAKA,CAAMA;gBAAGA,CAACA;gBAEnCD,qCAAWA,GAAXA;oBAEEE,IAAIA,GAAGA,GAAGA,IAAIA,CAACA,eAAeA,CAACA,YAAYA,EAAEA,KAAKA,CAACA,CAACA;oBAEpDA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAChCA,UAACA,IAAcA;wBACbA,MAAMA,CAACA,IAAIA,CAACA,IAAIA,EAAEA,CAACA,KAAKA,CAACA;oBAC3BA,CAACA,CACFA,CAACA;gBAEJA,CAACA;gBAEDF,wCAAcA,GAAdA,UAAeA,EAAUA;oBACvBG,IAAIA,GAAGA,GAAGA,IAAIA,CAACA,eAAeA,CAACA,aAAaA,GAAGA,EAAEA,EAAEA,KAAKA,CAACA,CAACA;oBAE1DA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAChCA,UAACA,IAAcA;wBACbA,MAAMA,CAACA,IAAIA,CAACA,IAAIA,EAAEA,CAACA,IAAIA,CAACA;oBAC1BA,CAACA,CACFA,CAACA;gBACJA,CAACA;gBAEDH,uCAAaA,GAAbA,UAAcA,CAAUA;oBACtBI,IAAIA,OAAOA,GAAGA,IAAIA,cAAOA,CAACA,EAACA,cAAcA,EAAEA,gCAAgCA,EAACA,CAACA,CAACA;oBAC9EA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,GAAGA,CAACA,gBAAgBA,GAAGA,CAACA,CAACA,EAAEA,EAAEA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,EAAEA,EAACA,SAAAA,OAAOA,EAACA,CAACA,CAACA,GAAGA,CAC9EA,UAACA,IAAcA;wBACbA,MAAMA,CAACA,IAAIA,CAACA,IAAIA,EAAEA,CAACA,IAAIA,CAACA;oBAC1BA,CAACA,CACFA,CAACA;gBAEJA,CAACA;gBAESJ,yCAAeA,GAAzBA,UAA0BA,GAAWA,EAAEA,MAAcA;oBAEnDK,IAAIA,OAAOA,GAAGA,2BAA2BA,CAACA;oBAE1CA,IAAIA,OAAOA,GAAGA,IAAIA,qBAAcA,CAACA;wBAC/BA,MAAMA,EAAEA,oBAAaA,CAACA,MAAMA,CAACA;wBAC7BA,GAAGA,EAAEA,OAAOA,GAAGA,GAAGA;qBACnBA,CAACA,CAACA;oBAEHA,MAAMA,CAACA,IAAIA,cAAOA,CAACA,OAAOA,CAACA,CAACA;gBAC9BA,CAACA;gBAhDHL;oBAACA,iBAAUA,EAAEA;;oCAiDZA;gBAADA,sBAACA;YAADA,CAACA,AAjDD,IAiDC;YAjDD,6CAiDC,CAAA","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Contact} from '../models/contact';\nimport {Http, Headers, Request,Response, RequestMethod, RequestOptions} from 'angular2/http';\nimport 'rxjs/add/operator/map';\nimport {Observable} from 'rxjs';\nimport {CONTACT_DATA} from '../data/contact-data';\n\n@Injectable()\nexport class ContactsService {\n\n\n  constructor(private _http: Http) {}\n\n  getContacts(): Observable<Contact[]> {\n\n    var req = this.generateRequest('/\\contacts', 'Get');\n\n    return this._http.request(req).map(\n      (resp: Response) => {\n        return resp.json().items;\n      }\n    );\n\n  }\n\n  getContactById(id: number): Observable<Contact> {\n    var req = this.generateRequest('/\\contacts/' + id, 'Get');\n\n    return this._http.request(req).map(\n      (resp: Response) => {\n        return resp.json().item;\n      }\n    );\n  }\n\n  updateContact(c: Contact): Observable<Contact> {\n    let headers = new Headers({'Content-Type': 'application/json;charset=UTF-8'});\n    return this._http.put('/api/contacts/' + c.id, JSON.stringify(c), {headers}).map(\n      (resp: Response) => {\n        return resp.json().item;\n      }\n    );\n\n  }\n\n  protected generateRequest(url: string, method: string): Request {\n\n    let baseUrl = 'http://localhost:4200/api';\n\n    let options = new RequestOptions({\n      method: RequestMethod[method],\n      url: baseUrl + url\n    });\n\n    return new Request(options);\n  }\n}\n"]}